<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>max_time = 13;
c_time = max_time;
scale = 5;


var surf;
surf = surface_create(view_wview[0], 28);

surface_set_target(surf);

var i;
for(i = 10; i &lt; view_wview[0] - 10 ; i += scale){
    draw_line(i, 0, i, surface_get_height(surf));
}

surface_reset_target();
back = sprite_create_from_surface(surf, 0,0, surface_get_width(surf), surface_get_height(surf), true, false, 0, 0);
surface_free(surf);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(c_time &gt;= 0 &amp;&amp; obj_player.visible){
    if(fps &gt; 0){
        c_time -= 1/fps;
    }

    if(c_time &lt; 0){
        instance_create(x, y, obj_draw_netz);
    }
}
/*
var rim;
rim = -128 / 2;
instance_activate_all();
with(obj_solid_placeholder) instance_destroy();
instance_deactivate_region(view_xview[0] - rim, view_yview[0] - rim, view_wview[0] + 2 * rim, view_hview[0] + 2 * rim, true, true);
with(obj_block) instance_create(x, y, obj_solid_placeholder);
instance_activate_all();
instance_deactivate_region(view_xview[0] - rim, view_yview[0] - rim, view_wview[0] + 2 * rim, view_hview[0] + 2 * rim, false, true);
instance_activate_object(obj_player);
instance_activate_object(obj_solid_placeholder);
instance_activate_object(obj_timer);*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(back, -1, view_xview[0], view_yview[0]);

draw_set_color(c_navy);
draw_set_alpha(0.5);
draw_rectangle(view_xview[0] + 10, view_yview[0] + 6, view_xview[0] + 10 + max_time * scale, view_yview[0] + 24, false);
draw_set_alpha(1);
draw_set_color(c_blue);
draw_rectangle(view_xview[0] + 10, view_yview[0] + 10, view_xview[0] + 10 + c_time * scale, view_yview[0] + 20, false);
draw_set_color(c_black);
draw_rectangle(view_xview[0] + 10, view_yview[0] + 10, view_xview[0] + 10 + c_time * scale, view_yview[0] + 20, true);
//draw_text(view_xview[0] + 10, view_yview[0] + 10, string(c_time));

if(obj_player.is_debug) draw_text(view_xview[0] + view_wview[0] - 20, view_yview[0] + 10, string(fps));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
</object>
